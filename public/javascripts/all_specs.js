// Generated by CoffeeScript 1.3.3
(function() {
  var _this = this;

  describe("App", function() {
    beforeEach(function() {
      return _this.app = new window.Store.App({
        el: $('<div/>'),
        template: function(data) {
          return data;
        },
        catalog: {
          get: function() {}
        },
        searchBox: $('<input/>')
      });
    });
    describe('.load', function() {
      return it('should load the catalog', function() {
        spyOn(_this.app.catalog, 'get');
        _this.app.load();
        return expect(_this.app.catalog.get).toHaveBeenCalled();
      });
    });
    describe('.render', function() {
      return it('should display the results in the view', function() {
        _this.app.render('hello world');
        return expect(_this.app.el.html()).toBe('hello world');
      });
    });
    return describe('isMatch', function() {
      it('should return true when title contains the text', function() {
        var match;
        match = _this.app.isMatch({
          title: 'Google'
        }, 'Google');
        return expect(match).toBe(true);
      });
      it('should return true when title contains the text in a different case', function() {
        var match;
        match = _this.app.isMatch({
          title: 'Google'
        }, 'gooGLe');
        return expect(match).toBe(true);
      });
      xit('should return true when description contains the text', function() {});
      xit('should return true when description contains the text in a different case', function() {});
      return xit('should return false when neither title nor description contains the text', function() {});
    });
  });

}).call(this);
