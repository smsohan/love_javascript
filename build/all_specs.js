// Generated by CoffeeScript 1.3.3
(function() {
  var address, page, reportWatcher,
    _this = this;

  if (phantom.args.length === 0) {
    console.log("Need a url as the argument");
    phantom.exit(1);
  }

  reportWatcher = {
    run: function(page, max_tries) {
      var callback, tries,
        _this = this;
      if (max_tries == null) {
        max_tries = 10;
      }
      tries = 0;
      callback = function() {
        tries = _this.incrementTries(tries, max_tries);
        return _this.checkForReportCompletion(page);
      };
      return setTimeout(callback, 100);
    },
    incrementTries: function(tries, max_tries) {
      if (tries === max_tries) {
        phantom.exit(1);
      }
      return tries + 1;
    },
    getErrorCount: function(page) {
      return page.evaluate(function() {
        return window.jasmineErrorCount;
      });
    },
    checkForReportCompletion: function(page) {
      var errorCount;
      errorCount = this.getErrorCount(page);
      if (errorCount === void 0) {
        return;
      }
      if (errorCount === 0) {
        return phantom.exit(0);
      } else {
        return phantom.exit(1);
      }
    }
  };

  address = phantom.args[0];

  page = new WebPage();

  page.onConsoleMessage = function(msg) {
    return console.log(msg);
  };

  page.onError = function(msg, trace) {
    console.log(msg);
    return trace.forEach(function(item) {
      return console.log(" " + item.file + ":" + item.line);
    });
  };

  page.open(address, function(status) {
    if (status !== 'success') {
      console.log('Unable to access network');
      phantom.exit(1);
    }
    return reportWatcher.run(page);
  });

  describe("Player", function() {
    beforeEach(function() {
      _this.player = new window.Gallery.Player();
      return _this.song = new window.Gallery.Song('Dan Mangan', 'Robots');
    });
    describe('.play', function() {
      beforeEach(function() {
        return _this.player.play(_this.song);
      });
      it('should set the current song', function() {
        return expect(_this.player.currentSong).toBe(_this.song);
      });
      return it('should set playing to true', function() {
        return expect(_this.player.playing).toBe(true);
      });
    });
    describe('.pause', function() {
      beforeEach(function() {
        return _this.player.play(_this.song);
      });
      return it('should set playing to false', function() {
        _this.player.pause();
        return expect(_this.player.playing).toBe(false);
      });
    });
    describe('.resume', function() {
      beforeEach(function() {
        return _this.player.play(_this.song);
      });
      it('should be set playing to true', function() {
        _this.player.pause();
        _this.player.resume();
        return expect(_this.player.playing).toBe(true);
      });
      return it('should throw song is already playing error when song already playing', function() {
        return expect(function() {
          return _this.player.resume();
        }).toThrow(new Error("song is already playing"));
      });
    });
    return describe('.favorite', function() {
      return it('should add a like to the song', function() {
        spyOn(_this.song, 'like');
        _this.player.play(_this.song);
        _this.player.favorite();
        return expect(_this.song.like).toHaveBeenCalled();
      });
    });
  });

  describe("Song", function() {
    beforeEach(function() {
      return _this.song = new window.Gallery.Song('Dan Mangan', 'Robots');
    });
    describe('.like', function() {
      return it('should set the current song', function() {
        _this.song.like();
        return expect(_this.song.likes).toBe(1);
      });
    });
    return describe('.newFeature', function() {
      return it('should throw not implemented error', function() {
        return expect(function() {
          return _this.song.newFeature();
        }).toThrow(new Error("not yet implemented"));
      });
    });
  });

}).call(this);
